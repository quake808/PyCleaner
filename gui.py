# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pycleaner.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from importlib import reload
import webbrowser
import pycleaner


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(260, 400)
        MainWindow.setMinimumSize(QtCore.QSize(260, 400))
        MainWindow.setMaximumSize(QtCore.QSize(260, 400))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(9)
        MainWindow.setFont(font)
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon/icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setEnabled(True)
        self.frame.setGeometry(QtCore.QRect(-20, -10, 361, 431))
        self.frame.setStyleSheet("background-color: qlineargradient(spread:repeat, x1:1, y1:0, x2:0, y2:1, stop:0 rgba(39, 39, 39, 255), stop:1 rgba(76, 75, 75, 255));")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.frame_2 = QtWidgets.QFrame(self.frame)
        self.frame_2.setGeometry(QtCore.QRect(20, 359, 311, 61))
        self.frame_2.setStyleSheet("background-color: rgb(50, 50, 50);\n"
"")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.pushButton = QtWidgets.QPushButton(self.frame_2)
        self.pushButton.setEnabled(True)
        self.pushButton.setGeometry(QtCore.QRect(10, 0, 51, 51))
        self.pushButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pushButton.setAutoFillBackground(False)
        self.pushButton.setStyleSheet("opacity: 0;\n"
"padding: 0px;\n"
"border: none;\n"
"color: white;\n"
"text-align: center;\n"
"text-decoration: none;\n"
"display: inline-block;\n"
"font-size: 16px;\n"
"margin: 4px 2px;\n"
"")
        self.pushButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("github.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon1)
        self.pushButton.setIconSize(QtCore.QSize(35, 35))
        self.pushButton.setShortcut("")
        self.pushButton.setCheckable(False)
        self.pushButton.setChecked(False)
        self.pushButton.setAutoRepeat(False)
        self.pushButton.setAutoDefault(False)
        self.pushButton.setDefault(False)
        self.pushButton.setFlat(True)
        self.pushButton.setObjectName("pushButton")
        self.lineEdit = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit.setGeometry(QtCore.QRect(90, 5, 171, 20))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit.setFont(font)
        self.lineEdit.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.lineEdit.setStyleSheet("color: rgb(255, 255, 255);")
        self.lineEdit.setFrame(False)
        self.lineEdit.setReadOnly(True)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_2)
        self.lineEdit_2.setGeometry(QtCore.QRect(156, 23, 171, 20))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.lineEdit_2.setStyleSheet("color: rgb(255, 255, 255);")
        self.lineEdit_2.setFrame(False)
        self.lineEdit_2.setReadOnly(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame)
        self.pushButton_2.setGeometry(QtCore.QRect(46, 110, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setAutoFillBackground(False)
        self.pushButton_2.setStyleSheet("QPushButton {\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 5px;\n"
"}\n"
"QPushButton:hover {\n"
"background-color: rgb(53, 53, 53);\n"
"\n"
"}")
        self.pushButton_2.setShortcut("")
        self.pushButton_2.setCheckable(False)
        self.pushButton_2.setChecked(False)
        self.pushButton_2.setDefault(False)
        self.pushButton_2.setFlat(False)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.frame)
        self.pushButton_3.setGeometry(QtCore.QRect(46, 170, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setAutoFillBackground(False)
        self.pushButton_3.setStyleSheet("QPushButton {\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 5px;\n"
"}\n"
"QPushButton:hover {\n"
"background-color: rgb(53, 53, 53);\n"
"\n"
"}")
        self.pushButton_3.setShortcut("")
        self.pushButton_3.setCheckable(False)
        self.pushButton_3.setChecked(False)
        self.pushButton_3.setDefault(False)
        self.pushButton_3.setFlat(False)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame)
        self.pushButton_4.setGeometry(QtCore.QRect(46, 230, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setAutoFillBackground(False)
        self.pushButton_4.setStyleSheet("QPushButton {\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 5px;\n"
"}\n"
"QPushButton:hover {\n"
"background-color: rgb(53, 53, 53);\n"
"\n"
"}")
        self.pushButton_4.setShortcut("")
        self.pushButton_4.setCheckable(False)
        self.pushButton_4.setChecked(False)
        self.pushButton_4.setDefault(False)
        self.pushButton_4.setFlat(False)
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.frame)
        self.pushButton_5.setGeometry(QtCore.QRect(46, 290, 211, 41))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setAutoFillBackground(False)
        self.pushButton_5.setStyleSheet("QPushButton {\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 5px;\n"
"}\n"
"QPushButton:hover {\n"
"background-color: rgb(53, 53, 53);\n"
"\n"
"}")
        self.pushButton_5.setShortcut("")
        self.pushButton_5.setCheckable(False)
        self.pushButton_5.setChecked(False)
        self.pushButton_5.setDefault(False)
        self.pushButton_5.setFlat(False)
        self.pushButton_5.setObjectName("pushButton_5")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(46, 30, 210, 61))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(8)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);\n"
"border-radius: 5px;\n"
"padding: 5px;")
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.add_functions()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PyCleaner"))
        self.lineEdit.setText(_translate("MainWindow", "quake808@protonmail.com"))
        self.lineEdit_2.setText(_translate("MainWindow", "version 0.1 (GUI)"))
        self.pushButton_2.setText(_translate("MainWindow", "ОЧИСТИТЬ СИСТЕМУ "))
        self.pushButton_3.setText(_translate("MainWindow", "ОЧИСТИТЬ БРАУЗЕРЫ "))
        self.pushButton_4.setText(_translate("MainWindow", "ПРОВЕРИТЬ ДИСК "))
        self.pushButton_5.setText(_translate("MainWindow", "ОЧИСТИТЬ ВСЕ"))
        self.label.setText(_translate("MainWindow", "Привет, я PyCleaner!\nНачнем чистку, выбери опцию..."))

    def add_functions(self):
        #GitHub
        self.pushButton.clicked.connect(lambda: webbrowser.open('https://github.com/quake808', new=2))

        #Clean sys temps
        self.pushButton_2.clicked.connect(lambda: pycleaner.tempclean.tempcleaner())
        self.pushButton_2.clicked.connect(lambda: self.label.setText(f"Всего очищено: "
                                                                     f"{pycleaner.tempclean.temp_success_counter} файлов. \n"
                                                                     f"Используется системой: "
                                                                     f"{pycleaner.tempclean.temp_failed_counter} файлов. \n"
                                                                     f"Освобождено места: "
                                                                     f"{pycleaner.tempclean.temp_files_size} Mb."))
        reload(pycleaner)
        #Clean web temps
        self.pushButton_3.clicked.connect(lambda: pycleaner.tempclean.browsercleaner())
        self.pushButton_3.clicked.connect(lambda: self.label.setText(f"Всего очищено: "
                                                                     f"{pycleaner.tempclean.web_success_counter} файлов.\n"
                                                                     f"Используется браузером: "
                                                                     f"{pycleaner.tempclean.web_failed_counter} файлов. \n"
                                                                     f"Освобождено места: "
                                                                     f"{pycleaner.tempclean.web_files_size} MB."))
        reload(pycleaner)

        #Check disk
        self.pushButton_4.clicked.connect(lambda: pycleaner.tempclean.drivercheck())
        self.pushButton_4.clicked.connect(lambda: self.label.setText("Проверка успешно завершена!\nОшибки устранены."))

        #Clean all
        self.pushButton_5.clicked.connect(lambda: pycleaner.tempclean.tempcleaner())
        self.pushButton_5.clicked.connect(lambda: pycleaner.tempclean.browsercleaner())
        self.pushButton_5.clicked.connect(lambda: self.label.setText(f"Всего очищено: "
                                                                     f"{pycleaner.tempclean.web_success_counter + pycleaner.tempclean.temp_success_counter} файлов.\n"
                                                                     f"Используется: "
                                                                     f"{pycleaner.tempclean.web_failed_counter + pycleaner.tempclean.temp_failed_counter} файлов.\n"
                                                                     f"Освобождено места: "
                                                                     f"{pycleaner.tempclean.web_files_size + pycleaner.tempclean.temp_files_size} MB."))
        reload(pycleaner)




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
